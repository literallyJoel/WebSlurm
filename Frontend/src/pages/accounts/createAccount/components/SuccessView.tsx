//=======================================//
//=============Form Inputs==============//
//=====================================//
/*
The ShadCN/UI library has been used for many of the UI elements, which are imported here
https://ui.shadcn.com/docs
*/
import {
  CardTitle,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/shadui/ui/card";
import { Button } from "@/shadui/ui/button";
import { FaRegCheckCircle } from "react-icons/fa";
import { CiMedicalClipboard } from "react-icons/ci";

import { useEffect, useState } from "react";

//=======================================//
//================Props=================//
//=====================================//
/*
If the user requested an autogenerated password, it is displayed on this screen.
It therefore is passed into this component from the parent. The hope is to 
eventually email this directly to the new user, but sendgrid locked me out :(
*/
interface props {
  generatedPass: string | undefined;
}

export const CreationSuccessView = ({ generatedPass }: props): JSX.Element => {
  /*
  If the user clicks on the box containing the password it copies it the clipboard
  This variable tracks the success state so feedback can be shown to the user
  */
  const [copyStatus, setCopyStatus] = useState(0);

  //If the copy status is changed, it'll reset itself after 5 seconds to reset the UI.
  useEffect(() => {
    setTimeout(() => {
      setCopyStatus(0);
    }, 5000);
  }, [copyStatus]);

  //=======================================//
  //===============UI Code================//
  //=====================================//
  return (
    <Card className="max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle className="text-center">User Created</CardTitle>
      </CardHeader>
      <CardContent className="flex flex-col items-center gap-4">
        <FaRegCheckCircle size={60} className="text-green-500" />

        {generatedPass !== undefined && (
          <>
            <span>Their temporary password is</span>
            <div className="relative w-full flex justify-center">
              <div
                className="border border-black rounded-xl w-5/12 p-2  flex flex-row items-center text-center hover:bg-slate-200 cursor-pointer"
                onClick={() =>
                  navigator.clipboard
                    .writeText(generatedPass)
                    .then(() => {
                      setCopyStatus(1);
                    })
                    .catch(() => {
                      setCopyStatus(-1);
                    })
                }
              >
                <div className="w-2/12">
                  <CiMedicalClipboard size={20} />
                </div>

                <div className="w-8/12">{generatedPass}</div>
              </div>
              <div
                className={`${
                  copyStatus === 1 ? "absolute" : "hidden"
                } -right-4 text-xs  bg-black bg-opacity-40 rounded-xl backdrop-blur-md text-white p-3`}
              >
                Succesfully copied to clipboard.
              </div>
            </div>
            <span className="text-center">
              This password will not be shown again. <br />
              The user will be required to change their password on their next
              sign in attempt.
            </span>
          </>
        )}
      </CardContent>
      <CardFooter className="justify-center">
        <Button className="w-5/12 border-uol border-2 rounded-xl shadow-2xl hover:text-white hover:bg-uol hover:shadow-inner">
          Back
        </Button>
      </CardFooter>
    </Card>
  );
};
